//////// Variables////////

  #include <SR04.h>
#define ECHO 11
#define TRIG 12
SR04 Capt = SR04(ECHO,TRIG);
int msr1;
int msr2;

  static int Pot = A0;
int RG1;
int RG2;
int Mrg;
float coef=0.1955034213098;

  int DIN_pin = 13;
int CS_pin = 4;
int CLK_pin = 5;
int Select;
//////// Variables//////////////////////////////////////////////////////////////////

//////// Delais//////////////////////////////////////////////////////////////////
int D1=25;
int D2=100;
int D3=50;
int D4=300;
//////// Delais//////////////////////////////////////////////////////////////////

//////// Tableau//////////////////////////////////////////////////////////////////
int st1[8]={B11111111,B10000001,B10000001,B10000001,B10000001,B10000001,B10000001,B11111111};

int st3[8]={B00000000,B00000000,B00011000,B00100100,B00100100,B00001000,B00000000,B00000000};
int st4[8]={B00000000,B00000000,B00011000,B00100100,B00000100,B00011000,B00000000,B00000000};
int st5[8]={B00000000,B00000000,B00011000,B00000100,B00100100,B00011000,B00000000,B00000000};
int st6[8]={B00000000,B00000000,B00001000,B00100100,B00100100,B00011000,B00000000,B00000000};
int st7[8]={B00000000,B00000000,B00010000,B00100100,B00100100,B00011000,B00000000,B00000000};
int st8[8]={B00000000,B00000000,B00011000,B00100000,B00100100,B00011000,B00000000,B00000000};
int st9[8]={B00000000,B00000000,B00011000,B00100100,B00100000,B00011000,B00000000,B00000000};
int st10[8]={B00000000,B00000000,B00011000,B00100100,B00100100,B00010000,B00000000,B00000000};

int CoeurV[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};
int CoeurP[8]={B01111000,B11111100,B11111110,B01111111,B01111111,B11111110,B11111100,B01111000};

int CoeurF1[8]={B00000000,B00000000,B00000000,B00011000,B00011000,B00000000,B00000000,B00000000};
int CoeurF2[8]={B00000000,B00011000,B00100100,B00010010,B00010010,B00100100,B00011000,B00000000};
int CoeurF3[8]={B00111000,B01000100,B01000010,B00100001,B00100001,B01000010,B01000100,B00111000};
int CoeurF4[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};

int CoeurVL1[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000010,B00000001,B00000010};
int CoeurVL2[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00000010,B00000100};
int CoeurVL3[8]={B00000000,B00000001,B00000000,B00000001,B00000000,B00001000,B00000100,B00001000};
int CoeurVL4[8]={B00000000,B00000010,B00000001,B00000010,B00000000,B00010000,B00001000,B00010000};
int CoeurVL5[8]={B00000000,B00000100,B00000010,B00000100,B00000001,B00100000,B00010001,B00100000};
int CoeurVL6[8]={B00000000,B00001000,B00000100,B00001000,B00000010,B01000001,B00100010,B01000000};
int CoeurVL7[8]={B00000001,B00010000,B00001001,B00010000,B00000100,B10000010,B01000100,B10000000};
int CoeurVL8[8]={B00000010,B00100001,B00010010,B00100000,B00001000,B00000100,B10001000,B00000000};
int CoeurVL9[8]={B00000100,B01000010,B00100100,B01000000,B00010000,B00001000,B00010000,B00000000};
int CoeurVL10[8]={B00001000,B10000100,B01001000,B10000000,B00100000,B00010000,B00100000,B00000000};
int CoeurVL11[8]={B00010000,B00001000,B10010000,B00000000,B01000000,B00100000,B01000000,B00000000};
int CoeurVL12[8]={B00100000,B00010000,B00100000,B00000000,B10000000,B01000000,B10000000,B00000000};
int CoeurVL13[8]={B01000000,B00100000,B01000000,B00000000,B00000000,B10000000,B00000000,B00000000};
int CoeurVL14[8]={B10000000,B01000000,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000};
int CoeurVL15[8]={B00000000,B10000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000};
int CoeurVL16[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000};

int CoeurS1[8]={B01000001,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B01000001};
int CoeurS2[8]={B10000010,B01000001,B00000000,B00000000,B00000000,B00000000,B01000001,B10000010};
int CoeurS3[8]={B10000100,B10000010,B01000001,B00000000,B00000000,B01000001,B10000010,B10000100};
int CoeurS4[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};

int CoeurCT1[8]={B11111111,B11000111,B10000011,B11000001,B11000001,B10000011,B11000111,B11111111};
int CoeurCT2[8]={B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111,B11111111};

int moins[8]={B00011000,B00011000,B00011000,B00011000,B00011000,B00011000,B00011000,B00011000};
int plus[8]={B00011000,B00011000,B00011000,B11111111,B11111111,B00011000,B00011000,B00011000};

int FDC1[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00000000,B00000000};
int FDC2[8]={B00000000,B00000000,B00000000,B00000000,B00000010,B00000000,B00000000,B00000000};
int FDC3[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000100,B00000000,B00000000};
int FDC4[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00001000,B00000000,B00000000};
int FDC5[8]={B00000000,B00000000,B00000000,B00000000,B00010000,B00000000,B00000000,B00000000};
int FDC6[8]={B00000000,B00000000,B00000000,B00000000,B00100000,B00000000,B00000000,B00000000};
int FDC7[8]={B00000000,B00000000,B00000000,B00110000,B00110000,B00000000,B00000000,B00000000};
int FDC8[8]={B00000000,B00000000,B01111000,B01111000,B01111000,B01111000,B00000000,B00000000};
int FDC9[8]={B00000000,B11111100,B11111100,B11111100,B11111100,B11111100,B11111100,B00000000};
int FDC10[8]={B11111110,B11111110,B11111110,B11001110,B11001110,B11111110,B11111110,B11111110};
int FDC11[8]={B11111111,B10111111,B10000111,B11000111,B11000111,B10000111,B10111111,B11111111};
int FDC12[8]={B11111111,B10000111,B10000011,B11000001,B11000001,B10000011,B10000111,B11111111};
int FDC13[8]={B01111111,B10000111,B10000011,B01000001,B01000001,B10000011,B10000111,B01111111};
int FDC14[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};
int FDC15[8]={B01111000,B10000000,B10000010,B01000001,B00000000,B10000010,B10000100,B01101000};
int FDC16[8]={B00101000,B10000000,B10000010,B01000001,B00000000,B10000010,B00000000,B01001000};
int FDC17[8]={B00100000,B10000000,B00000010,B01000001,B00000000,B00000000,B00000000,B00001000};
int FDC18[8]={B00000000,B10000000,B00000000,B00000001,B00000000,B00000000,B00000000,B00000000};
int FDC19[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000};

int CPR1[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000000,B00000000,B00000000};
int CPR2[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000000,B00000000};
int CPR3[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000100,B00000000};
int CPR4[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000100,B00001000};
int CPR5[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000100,B00011000};
int CPR6[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000100,B00111000};
int CPR7[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B00000100,B01111000};
int CPR8[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B00000010,B10000100,B01111000};
int CPR9[8]={B00000000,B00000000,B00000000,B00000000,B00000001,B10000010,B10000100,B01111000};
int CPR10[8]={B00000000,B00000000,B00000000,B00000000,B01000001,B10000010,B10000100,B01111000};
int CPR11[8]={B00000000,B00000000,B00000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR12[8]={B00000000,B00000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR13[8]={B00000000,B10000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR14[8]={B01000000,B10000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR15[8]={B01100000,B10000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR16[8]={B01110000,B10000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR17[8]={B01111000,B10000000,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR18[8]={B01111000,B10000100,B10000000,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR19[8]={B01111000,B10000100,B10000010,B01000000,B01000001,B10000010,B10000100,B01111000};
int CPR20[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};

int EVL1[8]={B00000001,B00000001,B00000001,B00000001,B00000001,B00000001,B00000001,B00000001};
int EVL2[8]={B00000010,B00000001,B00000001,B00000001,B00000001,B00000001,B00000001,B00000010};
int EVL3[8]={B00000100,B00000010,B00000001,B00000001,B00000001,B00000001,B00000010,B00000100};
int EVL4[8]={B00001000,B00000100,B00000010,B00000001,B00000001,B00000010,B00000100,B00001000};
int EVL5[8]={B00011000,B00000100,B00000010,B00000001,B00000001,B00000010,B00000100,B00011000};
int EVL6[8]={B00111000,B00000100,B00000010,B00000001,B00000001,B00000010,B00000100,B00111000};
int EVL7[8]={B01111000,B00000100,B00000010,B00000001,B00000001,B00000010,B00000100,B01111000};
int EVL8[8]={B01111000,B10000100,B00000010,B00000001,B00000001,B00000010,B10000100,B01111000};
int EVL9[8]={B01111000,B10000100,B10000010,B00000001,B00000001,B10000010,B10000100,B01111000};
int EVL10[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};

int PTS1[8]={B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00000000,B00010000};
int PTS2[8]={B00000000,B00000100,B00000000,B00000000,B00000001,B00000000,B00000000,B00010000};
int PTS3[8]={B00000000,B00000100,B10000000,B00000000,B00000001,B00000000,B00000000,B00011000};
int PTS4[8]={B00010000,B00000100,B10000000,B01000000,B00000001,B00000000,B10000000,B00011000};
int PTS5[8]={B00011000,B00000100,B10000000,B01000001,B00000001,B00000000,B10000000,B00111000};
int PTS6[8]={B00011000,B10000100,B10000000,B01000001,B00000001,B00000010,B10000000,B00111000};
int PTS7[8]={B00011000,B10000100,B10000000,B01000001,B00000001,B00000010,B10000000,B00111000};
int PTS8[8]={B00111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};
int PTS9[8]={B01111000,B10000100,B10000010,B01000001,B01000001,B10000010,B10000100,B01111000};
int PTS10[8]={B01111000,B10000100,B10000010,B01000011,B01000011,B10000010,B10000100,B01111000};
int PTS11[8]={B01111000,B10000100,B10000110,B01000111,B01000111,B10000110,B10000100,B01111000};
int PTS12[8]={B01111000,B10001100,B10001110,B01001111,B01001111,B10001110,B10001100,B01111000};
int PTS13[8]={B01111000,B10011100,B10011110,B01011111,B01011111,B10011110,B10011100,B01111000};
int PTS14[8]={B01111000,B10111100,B10111110,B01111111,B01111111,B10111110,B10111100,B01111000};
int PTS15[8]={B01111000,B11111100,B11111110,B01111111,B01111111,B11111110,B11111100,B01111000};

//////// Tableau//////////////////////////////////////////////////////////////////



void setup() {
 pinMode(CS_pin, OUTPUT);
 pinMode(DIN_pin, OUTPUT);
 pinMode(CLK_pin, OUTPUT);
 delay(50);
 init_MAX7219();
 Start();
 delay(1000);
 clear_matrix();
}

void loop() {

RG1=analogRead(Pot);
delay(50);
RG2=analogRead(Pot);
Mrg=(RG2*coef);

msr1=Capt.Distance();
delay(50);
msr2=Capt.Distance();

if (RG2<RG1-5){
  write_matrix(plus);
delay(D2);
clear_matrix();
}
if (RG2>RG1+5){
  write_matrix(moins);
delay(D2);
clear_matrix();
}

if(Mrg > msr1){
  Mrg = (msr1-10);
}
if(msr2 <(msr1-Mrg)){

Select = random(1,10);

if(Select==1){
  CoeurVP();
}
if(Select==2){
  CoeurF();
}
if(Select==3){
  CoeurVL();
}
if(Select==4){
  CoeurS();
}
if(Select==5){
  CoeurCT();
}
if(Select==6){
  FDC();
}
if(Select==7){
  CPR();
}
if(Select==8){
  EVL();
}
if(Select==9){
  PTS();
}
}
}



///////////Fonctions matrice//////////////////////////////////////////////////////////
void write_pix(int data)
{
 digitalWrite(CS_pin, LOW);
 for (int i = 0; i < 8; i++)
 {
   digitalWrite(CLK_pin, LOW);
   digitalWrite(DIN_pin, data & 0x80); // masquage de donnée
   data = data << 1; // on décale les bits vers la gauche
   digitalWrite(CLK_pin, HIGH);
 }
}
void write_line(int adress, int data)
{
 digitalWrite(CS_pin, LOW);
 write_pix(adress);
 write_pix(data);
 digitalWrite(CS_pin, HIGH);
}
void write_matrix(int *tab)
{
 for (int i = 0; i < 8; i++) write_line(i + 1, tab[i]);
}
void init_MAX7219(void)
{
 write_line(0x09, 0x00); //decoding BCD
 write_line(0X0A, 0x01); //brightness
 write_line(0X0B, 0x07); //scanlimit 8leds
 write_line(0X0C, 0x01); //power-down mode 0, normalmode1;
 write_line(0X0F, 0x00);
}
void clear_matrix(void)
{
 const int clean[8] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
 write_matrix(clean);
}
int intToHex(int x)
{
 switch (x)
 {
   case 0: return 0x01; break; //LED sur la première case
   case 1: return 0x02; break; //LED sur 2 case
   case 2: return 0x04; break; //LED sur 3 case
   case 3: return 0x08; break; //LED sur 4 case
   case 4: return 0x10; break; //LED sur 5 case
   case 5: return 0x20; break; //LED sur 6 case
   case 6: return 0x40; break; //LED sur 7 case
   case 7: return 0x80; break; //LED sur 8 case
 }
}
///////////Fonctions matrice//////////////////////////////////////////////////////////

///////////Animations//////////////////////////////////////////////////////////
void Start(){
write_matrix(st1);
delay(2000);

  for(int x=0;x<12;x++){
write_matrix(st3);
delay(D3);
write_matrix(st4);
delay(D3);
write_matrix(st5);
delay(D3);
write_matrix(st6);
delay(D3);
write_matrix(st7);
delay(D3);
write_matrix(st8);
delay(D3);
write_matrix(st9);
delay(D3);
write_matrix(st10);
delay(D3);
}
}
void CoeurVP(){
  for(int x=0;x<5;x++){
write_matrix(CoeurV);
delay(D2);
write_matrix(CoeurP);
delay(D2);
  }
clear_matrix();
}
void CoeurF(){
  for(int x=0;x<3;x++){
    write_matrix(CoeurF1);
delay(D3);
write_matrix(CoeurF2);
delay(D3);
write_matrix(CoeurF3);
delay(D3);
write_matrix(CoeurF4);
delay(D3);

write_matrix(CoeurF3);
delay(D3);
write_matrix(CoeurF2);
delay(D3);
write_matrix(CoeurF1);
delay(D3);
clear_matrix();
  }
}
void CoeurVL(){
  for(int x=0;x<2;x++){
write_matrix(CoeurVL1);
delay(D2);
write_matrix(CoeurVL2);
delay(D2);
write_matrix(CoeurVL3);
delay(D2);
write_matrix(CoeurVL4);
delay(D2);
write_matrix(CoeurVL5);
delay(D2);
write_matrix(CoeurVL6);
delay(D2);
write_matrix(CoeurVL7);
delay(D2);
write_matrix(CoeurVL8);
delay(D2);
write_matrix(CoeurVL9);
delay(D2);
write_matrix(CoeurVL10);
delay(D2);
write_matrix(CoeurVL11);
delay(D2);
write_matrix(CoeurVL12);
delay(D2);
write_matrix(CoeurVL13);
delay(D2);
write_matrix(CoeurVL14);
delay(D2);
write_matrix(CoeurVL15);
delay(D2);
write_matrix(CoeurVL16);
delay(D2);
clear_matrix();
  }
}
void CoeurS(){
  for(int x=0;x<2;x++){
     write_matrix(CoeurS1);
delay(D2);
write_matrix(CoeurS2);
delay(D2);
write_matrix(CoeurS3);
delay(D2);
write_matrix(CoeurS4);
delay(D2);

write_matrix(CoeurS4);
delay(D2);
write_matrix(CoeurS3);
delay(D2);
write_matrix(CoeurS2);
delay(D2);
write_matrix(CoeurS1);
delay(D2);
clear_matrix();
  }
}
void CoeurCT(){
  write_matrix(CoeurCT1);
delay(D2);
write_matrix(CoeurCT2);
delay(D2);
write_matrix(CoeurCT1);
delay(D2);
write_matrix(CoeurCT2);
delay(D2);
write_matrix(CoeurCT1);
delay(D2);
write_matrix(CoeurCT2);
delay(D2);
write_matrix(CoeurCT1);
delay(D2);
write_matrix(CoeurCT2);
delay(D2);
write_matrix(CoeurCT1);
delay(D2);
write_matrix(CoeurCT2);
delay(D2);
clear_matrix();
}
void FDC(){
  for(int x=0;x<2;x++){
    write_matrix(FDC1);
  delay(D2);
  write_matrix(FDC2);
  delay(D2);
  write_matrix(FDC3);
  delay(D2);
  write_matrix(FDC4);
  delay(D2);
  write_matrix(FDC5);
  delay(D2);
  write_matrix(FDC6);
  delay(D2);
  write_matrix(FDC7);
  delay(D2);
  write_matrix(FDC8);
  delay(D2);
  write_matrix(FDC9);
  delay(D2);
  write_matrix(FDC10);
  delay(D2);
  write_matrix(FDC11);
  delay(D2);
  write_matrix(FDC12);
  delay(D2);
  write_matrix(FDC13);
  delay(D2);
  write_matrix(FDC14);
  delay(D2);
  write_matrix(FDC15);
  delay(D2);
  write_matrix(FDC16);
  delay(D2);
  write_matrix(FDC17);
  delay(D2);
  write_matrix(FDC18);
  delay(D2);
  write_matrix(FDC19);
  delay(D2);
  clear_matrix();
  }
}
void CPR(){
write_matrix(CPR1);
delay(D2);
write_matrix(CPR2);
delay(D2);
write_matrix(CPR3);
delay(D2);
write_matrix(CPR4);
delay(D2);
write_matrix(CPR5);
delay(D2);
write_matrix(CPR6);
delay(D2);
write_matrix(CPR7);
delay(D2);
write_matrix(CPR8);
delay(D2);
write_matrix(CPR9);
delay(D2);
write_matrix(CPR10);
delay(D2);
write_matrix(CPR11);
delay(D2);
write_matrix(CPR12);
delay(D2);
write_matrix(CPR13);
delay(D2);
write_matrix(CPR14);
delay(D2);
write_matrix(CPR15);
delay(D2);
write_matrix(CPR16);
delay(D2);
write_matrix(CPR17);
delay(D2);
write_matrix(CPR18);
delay(D2);
write_matrix(CPR19);
delay(D2);
write_matrix(CPR20);
delay(1000);
clear_matrix();
}
void EVL(){
write_matrix(EVL1);
delay(D2);
write_matrix(EVL2);
delay(D2);
write_matrix(EVL3);
delay(D2);
write_matrix(EVL4);
delay(D2);
write_matrix(EVL5);
delay(D2);
write_matrix(EVL6);
delay(D2);
write_matrix(EVL7);
delay(D2);
write_matrix(EVL8);
delay(D2);
write_matrix(EVL9);
delay(D2);
write_matrix(EVL10);
delay(1000);
  clear_matrix();
}
void PTS(){
write_matrix(PTS1);
delay(D2);
write_matrix(PTS2);
delay(D2);
write_matrix(PTS3);
delay(D2);
write_matrix(PTS4);
delay(D2);
write_matrix(PTS5);
delay(D2);
write_matrix(PTS6);
delay(D2);
write_matrix(PTS7);
delay(D2);
write_matrix(PTS8);
delay(D2);
write_matrix(PTS9);
delay(D2);
write_matrix(PTS10);
delay(D2);
write_matrix(PTS11);
delay(D2);
write_matrix(PTS12);
delay(D2);
write_matrix(PTS13);
delay(D2);
write_matrix(PTS14);
delay(D2);
write_matrix(PTS15);
delay(1000);
clear_matrix();
}

///////////Animations//////////////////////////////////////////////////////////
